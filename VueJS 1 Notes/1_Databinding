notes on Vue 1.0:

//////////////////////////////////////////////////////////////////////////////
Databinding:
///////////////////////////////////////////////////////////////////////////

	Using Vue is somewhat similar to Angular...In order to create your page you want to first create a document(boiler-plate) that allows the language to be accepted into traditional code.  For example:  

		<!DOCTYPE html>
		<html lang="en">
			<head>

			</head

			<body>

			</body>
		</html>

	To add to your boiler-plate build, the next step would be adding a script that Vue recognizes(CDN) and in this case you'd create a div that Vue perceives as a view/container.  To encapsulate the view in a container you'd do the following: 

		<!DOCTYPE html>
		<html lang="en">
			<head>

			</head

			<body>
			// Keep in mind anything outside your container will not be recognized by Vue and hence will not be rendered into your view. 

				// Think of this as the container I spoke of above(This is what Vue recognizes)
				
// View: div id of app:

				<div id="app">

				</div>


			//Remember to reference the script for the cdn:
				<script src="http://cdnjs.cloudflare.com/ajax/libs/vue/2.0.3/vue.js"


	Now, let's instantiate the new Vuejs view and bind it to our Element "app""

				<script> 
			1. Create your data that Vue will reference: Keep in mind we can simplify this process by streamlining our code. I'll tell you more about later in the notes. 

// Model: the data within your object. 

					var data = {

						message: 'Hello World'

					};

// Vue Model: your new class of Vue

					new Vue({

						el: '#app', 
						(Note: The comma is added when we are referencing our variable. Otherwise we won't need to add it.  See note 2a.)

			2a. So how do we associate our data with our new Object(Vue)? Simply we'll add the following line of code that references our variable data:
						data: data

				** Remember how I said we could streamline our code rather than use the code found on lines48-52 and referencing the data variable on line 62 of these notes. We can add the following line of code and we won't need line 62. 

						data: {

							message: 'Hello World'

						}


					});

				</script>

			</body>
		</html>

//////////////////////////////////////////////////////////////////////////////
2 Way Databinding:
///////////////////////////////////////////////////////////////////////////

	In order to perform 2 way binding we need to create an input to demonstrate how 2 way binding works. Let's take a look at the lines 98- an continue this lesson. 


		<!DOCTYPE html>
		<html lang="en">
			<head>

			</head>

			<body>
				<div id="app">

					// We'll need to create an example of a directive. We can do so by installing an input field.  We'll give it the class of v-model. We can think of this a unique, customized Vue attribute...By doing so we create a value for the input that references our original message 'Hello World':

					<input v-model=" message">

				</div>


			//Remember to reference the script for the cdn:
				<script src="http://cdnjs.cloudflare.com/ajax/libs/vue/2.0.3/vue.js"

			<script> 
				var data = {
					message: 'Hello World'
				};
				new Vue({

					el: '#app',
					data: {
						message: 'Hello World'
					}
				});

			</script>
			</body>
		</html>